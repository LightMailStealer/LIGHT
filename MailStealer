--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v85=v2(v0(v30,16));if v19 then local v114=0;local v115;while true do if (v114==1) then return v115;end if (v114==0) then v115=v5(v85,v19);v19=nil;v114=1;end end else return v85;end end end);local function v20(v31,v32,v33) if v33 then local v86=(v31/((5 -(880 -(282 + 595)))^(v32-((1639 -(1523 + 114)) -1))))%((3 -1)^(((v33-(2 -1)) -(v32-1)) + (620 -(555 + 64)))) ;return v86-(v86%1) ;else local v87=931 -(857 + 74) ;local v88;while true do if (v87==0) then v88=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v88 + v88))>=v88) and (1 + 0)) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 + 0 ;local v36;local v37;while true do if (v35==((957 -(892 + 65)) -0)) then v36,v37=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;v35=4 -3 ;end if (v35==(118 -((75 -43) + 85))) then return (v37 * (251 + 5)) + v36 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + ((4 + 1) -(4 -2)) );v18=v18 + (7 -(3 + 0)) ;return (v41 * (16777566 -((345 -258) + 263))) + (v40 * (65716 -(67 + 113))) + (v39 * 256) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=953 -(802 + 150) ;local v45=(v20(v43,2 -1 ,36 -16 ) * ((2 + 0)^(1029 -(915 + 82)))) + v42 ;local v46=v20(v43,21,87 -56 );local v47=((v20(v43,19 + 13 )==(1 -0)) and  -(1188 -(1069 + (208 -90)))) or (2 -1) ;if (v46==0) then if (v45==(0 -0)) then return v47 * ((0 -0) + (438 -(145 + 293))) ;else v46=(431 -(44 + 386)) -0 ;v44=0 + 0 ;end elseif (v46==2047) then return ((v45==(791 -(368 + 423))) and (v47 * (1/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(1041 -(10 + 8)) ) * (v44 + (v45/(((4 + 3) -(1491 -(998 + 488)))^(494 -(416 + 26))))) ;end local function v25(v48) local v49=0 + 0 ;local v50;local v51;while true do if (v49==(1 + 0)) then v50=v3(v16,v18,(v18 + v48) -1 );v18=v18 + v48 ;v49=774 -(201 + (1406 -835)) ;end if (v49==(1141 -(116 + 1022))) then return v6(v51);end if (((0 + 0) -0)==v49) then v50=nil;if  not v48 then v48=v23();if (v48==(0 + 0)) then return "";end end v49=3 -2 ;end if (v49==((3 + 4) -5)) then v51={};for v116=1, #v50 do v51[v116]=v2(v1(v3(v50,v116,v116)));end v49=862 -(814 + (930 -(261 + 624))) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0 -0 ;end)();local v90=(function() return;end)();local v92=(function() return;end)();while true do if (v89~=(0 + 0)) then else local v122=(function() return 0 + 0 ;end)();local v123=(function() return;end)();while true do if (v122~=(0 -0)) then else v123=(function() return 0;end)();while true do if (v123~=1) then else v89=(function() return  #"}";end)();break;end if (0==v123) then v90=(function() return v91();end)();v92=(function() return nil;end)();v123=(function() return 1;end)();end end break;end end end if (v89== #"~") then if (v90== #".") then v92=(function() return v91()~=0 ;end)();elseif (v90==2) then v92=(function() return v93();end)();elseif (v90== #"asd") then v92=(function() return v94();end)();end v95[v96]=(function() return v92;end)();break;end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v53=(function() return function(v97,v98,v99,v100,v101,v102,v103,v104,v105) local v106=(function() return 1262 -(1091 + 171) ;end)();local v97=(function() return;end)();local v98=(function() return;end)();while true do if (v106~=(0 + 0)) then else v97=(function() return 0;end)();v98=(function() return nil;end)();v106=(function() return 1;end)();end if (v106~=1) then else local v125=(function() return 0;end)();while true do if (v125==0) then local v127=(function() return 0;end)();while true do if (v127==0) then while true do if ((0 -0)==v97) then v98=(function() return v99();end)();if (v100(v98, #"!", #">")~=0) then else local v128=(function() return 0 -0 ;end)();local v129=(function() return;end)();local v130=(function() return;end)();local v131=(function() return;end)();while true do if (v128==2) then if (v100(v130, #"\\", #"{")== #"]") then v131[376 -(123 + 251) ]=(function() return v103[v131[9 -7 ]];end)();end if (v100(v130,2,700 -(208 + 490) )~= #",") then else v131[ #"xnx"]=(function() return v103[v131[ #"nil"]];end)();end v128=(function() return 1 + 2 ;end)();end if (v128~=(1 + 0)) then else v131=(function() return {v101(),v101(),nil,nil};end)();if (v129==0) then local v460=(function() return 0 + 0 ;end)();local v461=(function() return;end)();while true do if (v460~=(202 -(14 + 188))) then else v461=(function() return 675 -(534 + 141) ;end)();while true do if (v461~=(0 + 0)) then else v131[ #"19("]=(function() return v101();end)();v131[ #"?id="]=(function() return v101();end)();break;end end break;end end elseif (v129== #">") then v131[ #"-19"]=(function() return v102();end)();elseif (v129==2) then v131[ #"19("]=(function() return v102() -(2^(15 + 1)) ;end)();elseif (v129== #"19(") then local v500=(function() return 0 + 0 ;end)();local v501=(function() return;end)();while true do if (v500==(0 -0)) then v501=(function() return 0 -0 ;end)();while true do if (v501==0) then v131[ #"-19"]=(function() return v102() -((5 -3)^(9 + 7)) ;end)();v131[ #"?id="]=(function() return v101();end)();break;end end break;end end end v128=(function() return 2;end)();end if (0==v128) then local v399=(function() return 0;end)();local v400=(function() return;end)();while true do if (v399==(0 + 0)) then v400=(function() return 396 -(115 + 281) ;end)();while true do if (v400==0) then v129=(function() return v100(v98,2, #"-19");end)();v130=(function() return v100(v98, #".dev",13 -7 );end)();v400=(function() return 1 + 0 ;end)();end if (v400==(2 -1)) then v128=(function() return 1;end)();break;end end break;end end end if (v128~=(10 -7)) then else if (v100(v130, #"19(", #"xxx")== #"!") then v131[ #"0313"]=(function() return v103[v131[ #"0313"]];end)();end v104[v105]=(function() return v131;end)();break;end end end break;end end return v97,v98,v99,v100,v101,v102,v103,v104,v105;end end end end end end end;end)();local v54=(function() return function(v107,v108,v109) local v110=(function() return 867 -(550 + 317) ;end)();while true do if ((0 -0)==v110) then v107[v108-#":" ]=(function() return v109();end)();return v107,v108,v109;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v68= #"\\",v59 do FlatIdent_A36C,Type,v21,Cons,v24,v25,v60,v68=(function() return v52(FlatIdent_A36C,Type,v21,Cons,v24,v25,v60,v68);end)();end v58[ #"-19"]=(function() return v21();end)();for v69= #"]",v23() do FlatIdent_7FAC9,Descriptor,v21,v20,v22,v23,v60,v55,v69=(function() return v53(FlatIdent_7FAC9,Descriptor,v21,v20,v22,v23,v60,v55,v69);end)();end for v70= #"<",v23() do v56,v70,v28=(function() return v54(v56,v70,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1 -0 ];local v66=v62[5 -(89 -(84 + 2)) ];local v67=v62[288 -(134 + 151) ];return function(...) local v71=v65;local v72=v66;local v73=v67;local v74=v27;local v75=1666 -(970 + 695) ;local v76= -(1 -0);local v77={};local v78={...};local v79=v12("#",...) -(3 -(2 -0)) ;local v80={};local v81={};for v111=0,v79 do if (v111>=v73) then v77[v111-v73 ]=v78[v111 + (1 -0) ];else v81[v111]=v78[v111 + (3 -2) ];end end local v82=(v79-v73) + (1825 -(1195 + 629)) ;local v83;local v84;while true do v83=v71[v75];v84=v83[1];if ((2003<2339) and (v84<=(85 -(15 + 5)))) then if ((432==432) and (v84<=(273 -(187 + 54)))) then if ((v84<=(795 -(162 + 618))) or (2024>=4031)) then if (v84<=(5 + 2)) then if ((v84<=3) or (2684>=4108)) then if (v84<=(1 + 0)) then if (v84>(0 -0)) then local v132=0 -0 ;local v133;while true do if (v132==(0 + 0)) then v133=v83[2];v81[v133]=v81[v133](v81[v133 + (1637 -(1373 + 263)) ]);break;end end else local v134=v83[(1844 -(497 + 345)) -(451 + 549) ];local v135={v81[v134](v13(v81,v134 + (1 -0) ,v83[4 -1 ]))};local v136=1384 -(20 + 726 + 638) ;for v301=v134,v83[4] do v136=v136 + 1 + 0 + 0 ;v81[v301]=v135[v136];end end elseif ((v84>(2 -0)) or (1145>=1253)) then v81[v83[343 -(218 + 123) ]]();elseif ((v83[1583 -((2868 -(605 + 728)) + 33 + 13) ]<v81[v83[4 + 0 ]]) or (3413<595)) then v75=v75 + 1 + 0 ;else v75=v83[563 -(306 + 254) ];end elseif ((3078>=2591) and (v84<=5)) then if ((3199<4030) and (v84>(1 + 3))) then v81[v83[2]]=v81[v83[5 -2 ]] + v83[4] ;else local v138=v83[1469 -(899 + 568) ];v81[v138]=v81[v138](v81[v138 + 1 + 0 ]);end elseif ((777<2078) and (v84>((30 -16) -(1 + 7)))) then local v140=v83[605 -(268 + (1238 -903)) ];v81[v140](v13(v81,v140 + 1 ,v76));else v81[v83[2]]=v81[v83[293 -(60 + 230) ]] * v83[(520 + 56) -(426 + 146) ] ;end elseif ((3418>2118) and (1696<=2282) and (v84<=(30 -19))) then if (v84<=9) then if ((v84>(1 + 0 + 7)) or (1761>=2462)) then v81[v83[2]]=v29(v72[v83[1459 -(282 + 1174) ]],nil,v64);elseif (v83[2]==v81[v83[4]]) then v75=v75 + (812 -(569 + 242)) ;else v75=v83[8 -5 ];end elseif (v84==10) then if ((3066<=3890) and (4551>2328) and (v81[v83[1 + 1 ]]==v83[4])) then v75=v75 + 1 ;else v75=v83[1027 -(706 + 318) ];end else v81[v83[491 -(457 + 32) ]]=v81[v83[1254 -(721 + 530) ]];end elseif ((v84<=(1284 -(945 + 326))) or (2998>=3281)) then if (v84==(29 -(8 + 9))) then v81[v83[2 + 0 ]]=v81[v83[703 -((1673 -(832 + 570)) + 429) ]] + v81[v83[4]] ;elseif (((3825>=467) and (v81[v83[2 + 0 ]]<v81[v83[1504 -(1408 + 92) ]])) or (4649<=2632)) then v75=v83[1089 -(461 + 625) ];else v75=v75 + (1289 -(993 + 295)) ;end elseif ((v84==(1 + 13)) or (2890==557)) then local v146=1171 -(418 + 753) ;local v147;local v148;local v149;local v150;while true do if ((v146==(1 + 0)) or (3860>4872)) then v76=(v149 + v147) -(1 + 0 + 0) ;v150=0 + 0 ;v146=1 + 1 ;end if (v146==(531 -(406 + 123))) then for v432=v147,v76 do local v433=1769 -(1749 + 20) ;while true do if ((v433==(0 + 0)) or (4770==2904)) then v150=v150 + (1323 -(1249 + 73)) ;v81[v432]=v148[v150];break;end end end break;end if ((v146==(0 + 0)) or (3998==2298)) then v147=v83[2];v148,v149=v74(v81[v147](v13(v81,v147 + ((299 + 847) -(466 + 679)) ,v83[6 -(10 -7) ])));v146=2 -1 ;end end else v75=v83[1903 -(106 + 1794) ];end elseif (v84<=(8 + 15)) then if (v84<=(5 + 14)) then if ((v84<=(50 -33)) or (3903==4536)) then if (v84>16) then local v152=v83[5 -3 ];local v153=v81[v152];for v304=v152 + (115 -(2 + 2 + 110)) ,v83[3] do v7(v153,v81[v304]);end else v81[v83[2]]=v81[v83[(1383 -(588 + 208)) -(57 + 527) ]][v81[v83[1431 -((110 -69) + 1386) ]]];end elseif (v84>(121 -(17 + 86))) then do return v81[v83[2 + 0 ]];end else v81[v83[3 -1 ]]=v29(v72[v83[8 -5 ]],nil,v64);end elseif (v84<=(187 -(122 + 44))) then if ((4093<=4845) and (v84==(34 -(1814 -(884 + 916))))) then v81[v83[6 -4 ]]=v83[3 + 0 ]~=0 ;else local v158=0 + 0 ;local v159;while true do if (((1569<=3647) and (v158==0)) or (8>=2739)) then v159=v83[3 -1 ];v81[v159]=v81[v159](v13(v81,v159 + (66 -(30 + 35)) ,v83[3 + 0 ]));break;end end end elseif ((v84==(1279 -(1043 + 214))) or (4046>=4927)) then v81[v83[2]][v83[3]]=v83[4];else v63[v83[3]]=v81[v83[7 -(10 -5) ]];end elseif ((2590==2590) and (v84<=(1239 -(323 + 516 + 373)))) then if (v84<=(66 -41)) then if ((v84>(604 -((1014 -(232 + 421)) + 219))) or (82>=1870)) then local v164=320 -(53 + (2156 -(1569 + 320))) ;local v165;local v166;while true do if ((4623>=2787) and (v164==(0 + 0))) then v165=v83[1 + 1 ];v166=v81[v83[416 -(15 + 398) ]];v164=983 -(18 + 184 + 780) ;end if (v164==1) then v81[v165 + (3 -2) ]=v166;v81[v165]=v166[v83[4]];break;end end elseif (v81[v83[(6 -4) + (605 -(316 + 289)) ]]==v81[v83[3 + 1 ]]) then v75=v75 + (851 -(20 + 830)) ;else v75=v83[3 + (0 -0) ];end elseif ((2624<4557) and (v84>(152 -(116 + 10)))) then if (v83[1 + 1 + 0 ]<=v81[v83[742 -((1995 -(666 + 787)) + 196) ]]) then v75=v75 + (1 -0) ;else v75=v83[1 + 2 ];end else local v167=v83[(427 -(360 + 65)) + 0 + 0 ];v81[v167](v13(v81,v167 + 1 ,v76));end elseif ((2234>=1230) and (v84<=(11 + 18))) then if (v84>(73 -(299 -(79 + 175)))) then if ((v83[2]<v81[v83[4]]) or (343==1786)) then v75=v83[7 -4 ];else v75=v75 + 1 ;end else v81[v83[2]][v81[v83[1554 -(1126 + 425) ]]]=v81[v83[409 -(118 + 287) ]];end elseif (v84<=(117 -87)) then v81[v83[1123 -(118 + 1003) ]]=v83[(12 -4) -5 ]~=0 ;elseif ((2570>2409) and (v84==(408 -(142 + 235)))) then if ((v81[v83[2]]~=v83[4]) or (3131>3542)) then v75=v75 + 1 ;else v75=v83[13 -10 ];end else local v359=v83[1 + 1 ];local v360={};for v412=978 -(553 + 424) , #v80 do local v413=v80[v412];for v435=0 -0 , #v413 do local v436=v413[v435];local v437=v436[1 + 0 ];local v438=v436[2 + 0 ];if (((v437==v81) and (v438>=v359)) or (2609>=3234)) then local v471=0 + 0 ;while true do if ((0 + 0)==v471) then v360[v438]=v437[v438];v436[1 + 0 ]=v360;break;end end end end end end elseif ((2577>=1578) and (v84<=48)) then if (v84<=(86 -(36 + 10))) then if ((4103<=4571) and (v84<=((303 -204) -63))) then if ((v84<=(75 -41)) or (3033>=4031) or (1495==4787)) then if (v84==(10 + 23)) then local v171=v83[9 -7 ];do return v81[v171](v13(v81,v171 + (754 -(239 + 514)) ,v76));end elseif ((v81[v83[1 + (1 -0) ]]==v83[1333 -((1696 -(503 + 396)) + 532) ]) or (310>4434)) then v75=v75 + 1 ;else v75=v83[3 + 0 ];end elseif ((2168<=4360) and ((v84>(12 + 23)) or (1401==4668))) then do return;end else v81[v83[4 -2 ]]=v81[v83[1205 -(373 + 829) ]] + v81[v83[735 -((657 -(92 + 89)) + 255) ]] ;end elseif (v84<=38) then if (v84==(1167 -(369 + 761))) then v81[v83[2 + (0 -0) ]]= #v81[v83[5 -2 ]];else v64[v83[5 -2 ]]=v81[v83[240 -(33 + 31 + 174) ]];end elseif ((2776>=1321) and (v84>39)) then v81[v83[2]]=v83[3]^v81[v83[4]] ;else local v177=v83[1 + 0 + 1 ];v76=(v177 + v82) -1 ;for v305=v177,v76 do local v306=v77[v305-v177 ];v81[v305]=v306;end end elseif (v84<=44) then if ((v84<=(61 -19)) or (487>2303)) then if (v84==(377 -(144 + 192))) then if (v83[218 -(42 + 174) ]<v81[v83[4 + 0 ]]) then v75=v75 + 1 + 0 ;else v75=v83[2 + 1 ];end elseif (v81[v83[1506 -(363 + 1141) ]]~=v81[v83[1584 -(1183 + 397) ]]) then v75=v75 + 1 ;else v75=v83[8 -(19 -14) ];end elseif ((994==994) and (v84>(5 + 27 + 11))) then do return v81[v83[2 + 0 ]]();end else v81[v83[1977 -((4361 -2448) + 62) ]]=v63[v83[2 + 1 + 0 ]];end elseif ((v84<=(121 -75)) or (4503==3462)) then if (v84==(1978 -(565 + 1368))) then v81[v83[2]]=v64[v83[(6 + 5) -8 ]];elseif (v81[v83[2]]==v81[v83[1665 -(1477 + 184) ]]) then v75=v75 + (1 -0) ;else v75=v83[3 + 0 ];end elseif (v84>(903 -(564 + 292))) then local v182=v83[(5 -3) -(0 + 0) ];do return v13(v81,v182,v76);end else do return v81[v83[5 -3 ]]();end end elseif (v84<=56) then if (v84<=52) then if ((1655>401) and (v84<=(354 -(244 + (91 -31))))) then if ((3063<=3426) and (553<=1543) and (v84==(38 + 11))) then local v183=v83[2];v81[v183](v81[v183 + ((1721 -(485 + 759)) -(41 + 435)) ]);else local v184=v83[1003 -(938 + 63) ];v81[v184]=v81[v184]();end elseif ((2015==2015) and (v84==((92 -52) + 11))) then local v186=v83[1127 -((2125 -(442 + 747)) + 189) ];local v187,v188=v74(v81[v186](v81[v186 + 1 + (1135 -(832 + 303)) ]));v76=(v188 + v186) -1 ;local v189=1613 -(1565 + 48) ;for v308=v186,v76 do v189=v189 + 1 + 0 ;v81[v308]=v187[v189];end elseif (v81[v83[1140 -((1728 -(88 + 858)) + 356) ]]~=v83[271 -(176 + 91) ]) then v75=v75 + 1 ;else v75=v83[3];end elseif (v84<=(140 -86)) then if ((v84>(77 -24)) or (4241<=2332)) then if ((1459>764) and (v83[1094 -(975 + 117) ]<=v81[v83[1879 -(157 + 524 + 1194) ]])) then v75=v75 + 1 + 0 ;else v75=v83[3 + 0 ];end else local v190=v83[10 -7 ];local v191=v81[v190];for v311=v190 + (3 -2) ,v83[1022 -(697 + 321) ] do v191=v191   .. v81[v311] ;end v81[v83[2]]=v191;end elseif (v84>(149 -94)) then v81[v83[3 -1 ]]=v83[3];else v81[v83[(1 + 3) -2 ]][v83[2 + 1 ]]=v81[v83[4]];end elseif (v84<=(112 -52)) then if (v84<=((944 -(766 + 23)) -97)) then if ((v84==57) or (641>4334)) then v81[v83[2]]={};else v81[v83[1229 -(322 + 905) ]]=v81[v83[614 -(602 + 9) ]] -v81[v83[1193 -(449 + 740) ]] ;end elseif ((v84==(931 -(826 + 46))) or (2364<1157)) then local v199=v83[949 -(245 + 702) ];local v200={v81[v199](v81[v199 + 1 ])};local v201=0 -0 ;for v312=v199,v83[2 + 2 ] do v201=v201 + 1 ;v81[v312]=v200[v201];end else local v202=1898 -(260 + 1638) ;local v203;local v204;local v205;while true do if (v202==2) then for v439=441 -(382 + 58) ,v83[4] do v75=v75 + 1 ;local v440=v71[v75];if (v440[3 -2 ]==67) then v205[v439-(1 + 0) ]={v81,v440[1208 -(902 + 303) ]};else v205[v439-(1 -0) ]={v63,v440[3]};end v80[ #v80 + (1691 -(1121 + 569)) ]=v205;end v81[v83[216 -(22 + 192) ]]=v29(v203,v204,v64);break;end if (v202==0) then v203=v72[v83[686 -(483 + 200) ]];v204=nil;v202=1464 -(1404 + 59) ;end if ((3399>=2260) and (v202==(2 -1))) then v205={};v204=v10({},{__index=function(v442,v443) local v444=v205[v443];return v444[1 -0 ][v444[767 -(468 + 297) ]];end,__newindex=function(v445,v446,v447) local v448=v205[v446];v448[563 -(334 + 228) ][v448[6 -4 ]]=v447;end});v202=4 -(1075 -(1036 + 37)) ;end end end elseif (v84<=(111 -49)) then if ((v84==(18 + 43)) or (393>=4242)) then do return v81[v83[238 -(141 + 95) ]];end else local v206=v83[2 + 0 ];local v207=v81[v83[3]];v81[v206 + (2 -(1 + 0)) ]=v207;v81[v206]=v207[v83[4]];end elseif (v84<=(151 -88)) then if (v81[v83[2]]<v81[v83[1 + (5 -2) ]]) then v75=v75 + (2 -(1 + 0)) ;else v75=v83[3 + 0 ];end elseif (v84>(34 + 30)) then v81[v83[2 -0 ]]={};else local v369=0 + 0 ;local v370;local v371;local v372;while true do if (v369==(163 -(92 + 71))) then v370=v83[2];v371=v81[v370];v369=1;end if (v369==(1481 -(641 + 839))) then v372=v83[(915 -(910 + 3)) + 1 ];for v474=1 -0 ,v372 do v371[v474]=v81[v370 + v474 ];end break;end end end elseif ((v84<=(863 -(574 + 191))) or (1167>1278)) then if (v84<=(206 -125)) then if (v84<=(61 + 12)) then if ((989<4859) and (v84<=69)) then if ((v84<=(167 -100)) or (1145<=1082)) then if ((v84==(34 + 32)) or (4795<949)) then v81[v83[851 -(254 + 595) ]]();else v81[v83[128 -((1739 -(1466 + 218)) + 33 + 38) ]]=v81[v83[3]];end elseif (v84>68) then local v213=0 -(1148 -(556 + 592)) ;local v214;while true do if ((3842==3842) and (v213==0)) then v214=v83[1792 -(573 + 1217) ];v81[v214]=v81[v214](v13(v81,v214 + (2 -1) ,v76));break;end end else local v215=0 + 0 ;local v216;local v217;local v218;while true do if ((v215==(0 + 0)) or (3105==4881)) then v216=v83[2 -0 ];v217={v81[v216](v81[v216 + (2 -1) ])};v215=1 -0 ;end if (v215==(1 + 0)) then v218=0 -0 ;for v450=v216,v83[812 -(329 + 479) ] do v218=v218 + ((1661 -(174 + 680)) -(118 + 688)) ;v81[v450]=v217[v218];end break;end end end elseif ((v84<=((408 -289) -(25 + 23))) or (1887>4878)) then if ((1747<=3601) and (v84==((28 -14) + 40 + 16))) then if ((v83[1888 -((1666 -(396 + 343)) + 959) ]<v81[v83[13 -9 ]]) or (804>4359)) then v75=v83[735 -(16 + 64 + 652) ];else v75=v75 + (1 -0) ;end elseif (v81[v83[99 -(11 + 86) ]]<v81[v83[9 -5 ]]) then v75=v75 + 1 ;else v75=v83[3];end elseif ((4670>=3623) and ((v84>(357 -(175 + 110))) or (4087>4116))) then v81[v83[2]]=v81[v83[6 -(1480 -(29 + 1448)) ]] -v81[v83[19 -15 ]] ;else v75=v83[3];end elseif ((2065<2544) and (v84<=77)) then if ((1311<=3359) and (v84<=(1871 -(503 + 1293)))) then if (v84>(206 -132)) then v81[v83[2 + 0 ]]=v63[v83[1064 -(810 + 251) ]];else for v315=v83[2 + 0 ],v83[1392 -(135 + 1254) ] do v81[v315]=nil;end end elseif ((2717<=3156) and (v84>(24 + 52))) then v81[v83[2 + 0 ]]=v83[536 -((161 -118) + 490) ]^v81[v83[4]] ;else local v224=v83[735 -(711 + 22) ];v81[v224]=v81[v224](v13(v81,v224 + (3 -(9 -7)) ,v83[862 -(160 + 80 + 619) ]));end elseif (v84<=((1547 -(389 + 1138)) + 59)) then if (v84==(123 -45)) then local v226=v83[1 + (575 -(102 + 472)) ];do return v13(v81,v226,v226 + v83[3] );end else local v227=v83[1746 -(1344 + 400) ];local v228={v81[v227](v13(v81,v227 + (406 -(255 + 150)) ,v76))};local v229=0;for v317=v227,v83[4 + 0 ] do v229=v229 + 1 + 0 ;v81[v317]=v228[v229];end end elseif ((1106<=1266) and (v84>(341 -261))) then if ((1081<4524) and (v81[v83[6 -4 ]]~=v81[v83[1743 -(404 + 741 + 594) ]])) then v75=v75 + (407 -(183 + 223)) ;else v75=v83[3 -0 ];end else local v230=v83[2 + 0 ];v81[v230](v13(v81,v230 + 1 ,v83[2 + 1 ]));end elseif (v84<=(426 -(10 + 327))) then if ((440>=71) and (v84<=(56 + 4 + 25))) then if ((3155<4650) and (v84<=(421 -(118 + 220)))) then if ((4934>2607) and (3774>=1839) and (v84>(28 + 54))) then if v81[v83[451 -(108 + 341) ]] then v75=v75 + 1 ;else v75=v83[2 + 1 ];end else local v231=v83[8 -6 ];v81[v231](v13(v81,v231 + (1494 -(711 + 782)) ,v83[5 -2 ]));end elseif (((2811==2811) and (v84>((2098 -(320 + 1225)) -(270 + 199)))) or (1400>3116)) then v81[v83[1 + 1 ]][v83[1822 -(580 + 1239) ]]=v83[11 -7 ];else local v234=v83[2 + 0 ];local v235={v81[v234](v13(v81,v234 + 1 + 0 ,v76))};local v236=0 -0 ;for v320=v234,v83[3 + 1 ] do local v321=(2076 -909) -(645 + 522) ;while true do if ((2146>1122) and (v321==(1790 -(1010 + 780)))) then v236=v236 + 1 + 0 ;v81[v320]=v235[v236];break;end end end end elseif ((525<1662) and (v84<=87)) then if (v84>(409 -323)) then v81[v83[5 -3 ]]=v83[1839 -(1045 + 484 + 307) ]~=(0 -0) ;v75=v75 + (1 -0) ;else local v238=v83[507 -(351 + 154) ];local v239=v83[(3042 -(157 + 1307)) -(1281 + 293) ];local v240=v238 + (268 -(28 + 238)) ;local v241={v81[v238](v81[v238 + (1560 -(1381 + 178)) ],v81[v240])};for v322=1 + 0 ,v239 do v81[v240 + v322 ]=v241[v322];end local v242=v241[1 + 0 ];if (v242 or (56==3616) or (876>2550)) then local v377=0 + 0 ;while true do if (v377==(0 -0)) then v81[v240]=v242;v75=v83[2 + 1 ];break;end end else v75=v75 + (471 -(381 + 89)) ;end end elseif (v84>(79 + 9)) then local v243=v83[2 + 0 ];do return v81[v243](v13(v81,v243 + (1 -0) ,v83[1159 -(1074 + 82) ]));end else local v244=0 -0 ;local v245;while true do if (v244==(1784 -(214 + 1570))) then v245=v83[(3316 -(821 + 1038)) -(990 + 465) ];v81[v245]=v81[v245](v13(v81,v245 + 1 + 0 ,v76));break;end end end elseif (v84<=(41 + 52)) then if (v84<=91) then if ((219<=2456) and (v84>(88 + 2))) then v81[v83[2]]=v83[11 -8 ]~=(1726 -(1668 + 58)) ;v75=v75 + (627 -(512 + (284 -170))) ;else v81[v83[5 -3 ]]= #v81[v83[3]];end elseif (v84==92) then local v248=0 -0 ;local v249;while true do if ((v248==(0 -(0 + 0))) or (4219==1150)) then v249=v83[2];do return v13(v81,v249,v76);end break;end end else do return;end end elseif ((v84<=(45 + 50)) or (2989<=222)) then if (v84>(18 + 76)) then v81[v83[2 + 0 ]]=v81[v83[3]]/v83[13 -9 ] ;else local v251=v83[1996 -(109 + 1885) ];local v252={v81[v251](v13(v81,v251 + (1 -0) ,v83[818 -(98 + 717) ]))};local v253=826 -(802 + 24) ;for v325=v251,v83[6 -2 ] do v253=v253 + (1 -0) ;v81[v325]=v252[v253];end end elseif (v84<=(15 + 81)) then v81[v83[2 + 0 ]]=v81[v83[1 + (4 -2) ]][v81[v83[1030 -(834 + 192) ]]];elseif (v84>(21 + 76)) then v64[v83[3]]=v81[v83[5 -3 ]];else local v380=v83[6 -(1 + 3) ];local v381=v81[v380];local v382=v83[3];for v422=1 + 0 ,v382 do v381[v422]=v81[v380 + v422 ];end end elseif (v84<=(13 + 34 + 67)) then if (v84<=106) then if ((2258>1241) and (v84<=(85 + 17))) then if (v84<=(2 + 71 + 27)) then if (v84==(47 + 52)) then if ( not v81[v83[1435 -(797 + 636) ]] or (2421<622)) then v75=v75 + (4 -3) ;else v75=v83[1622 -(1427 + 192) ];end else v81[v83[2]]=v81[v83[2 + 1 ]][v83[8 -4 ]];end elseif ((41<4259) and (v84==(91 + 10))) then v81[v83[(1 -0) + 1 ]]=v81[v83[329 -(192 + 134) ]] * v83[4] ;else v81[v83[1278 -(316 + 960) ]]=v81[v83[2 + (305 -(300 + 4)) ]] * v81[v83[4 + 0 ]] ;end elseif (v84<=(97 + 7)) then if (v84==103) then v81[v83[7 -(2 + 3) ]]=v81[v83[3]][v83[555 -((217 -134) + 468) ]];else v81[v83[1808 -(1202 + 604) ]]=v64[v83[3]];end elseif ((1009<=1130) and (v84==(490 -385))) then v81[v83[2 -(362 -(112 + 250)) ]]=v81[v83[8 -5 ]] + v83[329 -(45 + 280) ] ;else local v265=v83[2 + 0 ];local v266=v83[4 + 0 ];local v267=v265 + 1 + 1 ;local v268={v81[v265](v81[v265 + 1 + 0 ],v81[v267])};for v328=1,v266 do v81[v267 + v328 ]=v268[v328];end local v269=v268[1 -0 ];if ((2758<2980) and v269) then local v384=1911 -(340 + 1571) ;while true do if (v384==(0 + 0 + 0)) then v81[v267]=v269;v75=v83[1775 -(1733 + 39) ];break;end end else v75=v75 + (2 -1) ;end end elseif (v84<=(1144 -(125 + 909))) then if (v84<=(2056 -(1096 + 852))) then if (v84==(48 + 59)) then local v270=v72[v83[3 -0 ]];local v271;local v272={};v271=v10({},{__index=function(v331,v332) local v333=0 + 0 ;local v334;while true do if (v333==0) then v334=v272[v332];return v334[513 -(409 + 103) ][v334[238 -(46 + 190) ]];end end end,__newindex=function(v335,v336,v337) local v338=v272[v336];v338[96 -(51 + 44) ][v338[1 + 1 ]]=v337;end});for v340=1,v83[1321 -(1114 + 203) ] do local v341=726 -(228 + 498) ;local v342;while true do if (v341==(0 + 0)) then v75=v75 + 1 ;v342=v71[v75];v341=1;end if ((v341==1) or (1930<56)) then if (v342[1 + 0 ]==(730 -(174 + 489))) then v272[v340-(2 -1) ]={v81,v342[1908 -(830 + 1075) ]};else v272[v340-(525 -(303 + 221)) ]={v63,v342[1165 -(171 + 991) ]};end v80[ #v80 + (4 -3) ]=v272;break;end end end v81[v83[5 -3 ]]=v29(v270,v271,v64);else v81[v83[4 -2 ]]=v81[v83[3 + 0 ]]/v83[13 -9 ] ;end elseif (v84==(314 -(118 + 87))) then v63[v83[4 -(1 + 0) ]]=v81[v83[6 -4 ]];else local v277=v83[(935 + 315) -(56 + 55 + 1137) ];v81[v277]=v81[v277]();end elseif (v84<=112) then if ((3333==3333) and ((v84==((200 + 69) -(91 + 67))) or (86>=3626))) then v81[v83[2]]=v81[v83[8 -5 ]] * v81[v83[4]] ;else local v280=v83[(1415 -(1001 + 413)) + 2 ];local v281=v81[v280];for v343=v280 + (524 -((943 -520) + 100)) ,v83[1 + 3 ] do v281=v281   .. v81[v343] ;end v81[v83[5 -3 ]]=v281;end elseif ((2395==2395) and (v84==(59 + 54))) then for v344=v83[(1655 -(244 + 638)) -(326 + 445) ],v83[13 -(703 -(627 + 66)) ] do v81[v344]=nil;end else v81[v83[(11 -7) -2 ]][v81[v83[6 -3 ]]]=v81[v83[4]];end elseif (((3780>2709) and (v84<=(833 -((1132 -(512 + 90)) + (2087 -(1665 + 241)))))) or (2225==20)) then if ((v84<=(999 -(614 + 267))) or (237>=2273)) then if ((v84<=116) or (872>=3092)) then if (v84>((864 -(373 + 344)) -(19 + 13))) then if (v81[v83[2]]<=v81[v83[6 -2 ]]) then v75=v75 + (2 -1) ;else v75=v83[8 -(3 + 2) ];end else v81[v83[1 + 1 ]][v83[3]]=v81[v83[6 -2 ]];end elseif ((v84>(242 -125)) or (2040<=703)) then local v287=v81[v83[1816 -(1293 + 519) ]];if ((4404>=3252) and  not v287) then v75=v75 + ((1 + 0) -0) ;else v81[v83[4 -2 ]]=v287;v75=v83[(13 -8) -2 ];end else local v288=v83[8 -6 ];v76=(v288 + v82) -1 ;for v346=v288,v76 do local v347=v77[v346-v288 ];v81[v346]=v347;end end elseif ((1107>796) and (v84<=(282 -162))) then if (v84==(64 + 55)) then local v289=v83[1 + 1 ];do return v81[v289](v13(v81,v289 + (2 -1) ,v76));end elseif ((959==959) and (v81[v83[1 + 1 ]]<v81[v83[2 + 2 ]])) then v75=v83[2 + 1 ];else v75=v75 + (1097 -(709 + 387)) ;end elseif (v84==(1979 -(673 + 1185))) then if (v81[v83[5 -3 ]]<=v81[v83[12 -(13 -5) ]]) then v75=v75 + 1 ;else v75=v83[3];end else local v290=v83[2 -0 ];local v291,v292=v74(v81[v290](v13(v81,v290 + 1 + 0 ,v83[3])));v76=(v292 + v290) -(1 + 0) ;local v293=0 -0 ;for v349=v290,v76 do v293=v293 + 1 + 0 ;v81[v349]=v291[v293];end end elseif ((v84<=(250 -124)) or (245>=2204)) then if (v84<=124) then if (v84==(240 -117)) then local v294=0;local v295;while true do if (v294==(1880 -(446 + 1434))) then v295=v81[v83[1287 -(1040 + (1342 -(35 + 1064))) ]];if  not v295 then v75=v75 + (2 -1) ;else local v470=1847 -(559 + 1288) ;while true do if ((3162>=2069) and (v470==(1931 -(444 + 165 + 1322)))) then v81[v83[456 -(13 + 441) ]]=v295;v75=v83[3];break;end end end break;end end elseif v81[v83[7 -5 ]] then v75=v75 + (2 -1) ;else v75=v83[14 -11 ];end elseif ((v84>(5 + 120)) or (306>3081)) then if ( not v81[v83[7 -5 ]] or (3513<2706)) then v75=v75 + 1 ;else v75=v83[2 + 1 ];end else v81[v83[2]]=v83[2 + (2 -1) ];end elseif (v84<=(379 -251)) then if ((2978<3639) and (v84>(70 + 57))) then local v298=v83[3 -(1 + 0) ];do return v81[v298](v13(v81,v298 + (1237 -(298 + 938)) + 0 ,v83[2 + 1 ]));end else local v299=0;local v300;while true do if ((3279<=3967) and (v299==(0 + 0))) then v300=v83[2];v81[v300](v81[v300 + 1 ]);break;end end end elseif (v84<=(109 + 20)) then if ((v83[2 + (1259 -(233 + 1026)) ]==v81[v83[437 -(153 + 280) ]]) or (1988==877)) then v75=v75 + 1 ;else v75=v83[8 -5 ];end elseif ((3682>=2888) and (v84>(117 + 13))) then local v393=v83[1 + 1 ];local v394={};for v427=1 + 0 , #v80 do local v428=0 + 0 ;local v429;while true do if (v428==(0 + 0)) then v429=v80[v427];for v485=0 -0 , #v429 do local v486=v429[v485];local v487=v486[1 + 0 ];local v488=v486[669 -(89 + 578) ];if ((4291>1912) and (v487==v81) and (v488>=v393)) then v394[v488]=v487[v488];v486[1 + (1666 -(636 + 1030)) ]=v394;end end break;end end end else local v395=v83[3 -1 ];local v396,v397=v74(v81[v395](v81[v395 + (1050 -(572 + 477)) ]));v76=(v397 + v395) -1 ;local v398=0 + 0 ;for v430=v395,v76 do local v431=0 + 0 ;while true do if (v431==(0 + 0)) then v398=v398 + 1 + 0 + 0 ;v81[v430]=v396[v398];break;end end end end v75=v75 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
